# The easiest way to enable rewrtie rules ( if you are running apache ) is to 
# make sure that this config is set in the correct settings file.
# With Ubuntu the correct file is:
# /etc/apache2/sites-avalible/000-default.conf

# Replace 127.0.0.1 with your url ( external ).
# and the port with desired ( most likely 80 ).
<VirtualHost 127.0.0.1:8080>

	ServerName 127.0.0.1

	DocumentRoot /var/www/html/
	
	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined

	<Directory />
		Options FollowSymLinks
		AllowOverride None
		Require all denied
	</Directory>

	<Directory /usr/share>
		AllowOverride None
		Require all granted
	</Directory>

	<Directory /var/www/>
		Options Indexes FollowSymLinks
		AllowOverride None
		Require all granted
	</Directory>

	AccessFileName .htaccess

	<FilesMatch "^\.ht">
		Require all denied
	</FilesMatch>


	RewriteEngine On

			#	([^/.])      Dissallows entries with '.' or '/' in their names
	# Allows 'blog' to be used instead of 'blogg'. But 'blogg' still shows
	RewriteRule ^/blog/?$                   /blogg/                           [NC,R]
	RewriteRule ^/blog/([^/]+)/?$           /blogg/$1/                        [NC,R]
	RewriteRule ^/blog/([^/]+)/([^/]+)/?$   /blogg/$1/$2/                     [NC,R]
	# If no file is chosen
	#
	# At the moment no sub dir can be used.
	# Meaning that below should just be /blog.php
	RewriteRule ^/blogg/?$                  /blogEngine/blog.php                    [NC,L]
	# If file is chosen
	RewriteRule ^/blogg/([^/]+)/?$          /blogEngine/blog.php?filename=$1        [NC,L]
	# If file is chosen but 'nav' is used
	RewriteRule ^/blogg/([^/]+)/([^/]+)/?$  /blogEngine/blog.php?filename=$1&nav=$2 [NC,L]
</VirtualHost>

# vim: syntax=apache ts=4 sw=4 sts=2 sr noet
